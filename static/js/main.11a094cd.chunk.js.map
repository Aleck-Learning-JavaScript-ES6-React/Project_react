{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","SearchPanel","state","term","onUpdateSearch","e","target","value","setState","className","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","Button","key","color","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","obj","hasOwnProperty","isEmpty","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","App","data","nextId","deleteItem","index","findIndex","elem","slice","addItem","body","newItem","old","items","console","log","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11a094cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n        color: ${props => props.colored ? 'red' : 'black'};\r\n        :hover {\r\n            color: blue;\r\n        }\r\n    }    \r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;    \r\n    }       \r\n`\r\n\r\nconst AppHeader= ({liked, allPosts}) => {\r\n    return (\r\n        <Header colored>\r\n            <h1>Aleksandr Ostapenko</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    state = {\r\n        term: ''\r\n    }\r\n    \r\n    onUpdateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term}); \r\n        this.props.onUpdateSearch(term);   \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className = \"form-control search-input\"\r\n                type = \"text\"\r\n                placeholder = \"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n   }    \r\n}\r\n","import React, {Component} from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    buttons = [\r\n        {name: 'all', label: 'Все'},\r\n        {name: 'like', label: 'Понравилось'}\r\n    ]\r\n    \r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props; \r\n            const active = filter === name,\r\n                  clazz = active ? 'primary' : 'outline-primary'\r\n            return (\r\n                <Button key={name} color={clazz}\r\n                 onClick={() => onFilterSelect(name)}>{label}</Button>\r\n            )\r\n        });\r\n        \r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './post-list-item.sass';\r\n\r\nexport default class PostListItem extends Component {\r\n   \r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n        let classNames=\"app-list-item d-flex justify-content-between\";\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n                \r\n        return (\r\n            <div className={classNames}>\r\n                <span className=\"app-list-item-label\"\r\n                 onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button type=\"button\" className=\"btn-star btn-sm\"\r\n                     onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn-trash btn-sm\"\r\n                     onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport PostListItem from '../post-list-item/post-list-item';\r\nimport { ListGroup } from 'reactstrap';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n    // eslint-disable-next-line\r\n    const elements = posts.map((item) => {\r\n        if (typeof item === 'object' && !isEmpty(item)) {\r\n            const {id, ...itemProps}= item;\r\n            return (\r\n                <li key={id} className='list-group-item'>\r\n                    <PostListItem {...itemProps}\r\n                     onDelete={() => onDelete(id)}\r\n                     onToggleImportant={() => onToggleImportant(id)}\r\n                     onToggleLiked={() => onToggleLiked(id)} />\r\n                </li>\r\n            )\r\n        }\r\n    });\r\n\r\n    function isEmpty(obj) {\r\n        for(let key in obj) {\r\n            if(obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n           {elements}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React, {Component} from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.onAdd(this.state.text)\r\n            this.setState({\r\n                text: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    state = {\r\n        text: ''\r\n    }\r\n\r\n    onValueChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"bottom-panel d-flex\"\r\n             onSubmit={this.onSubmit}>\r\n                <input\r\n                 type=\"text\"\r\n                 placeholder=\"О чём вы думаете сейчас?\"\r\n                 className=\"form-control  new-post-label\"\r\n                 onChange={this.onValueChange}\r\n                 value={this.state.text}\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }    \r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddForm from '../post-add-form/post-add-form';\r\nimport './app.css';\r\nimport styled from 'styled-components';\r\nimport nextId from \"react-id-generator\";\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`\r\n/*const StyledAppBlock = styled(AppBlock)`\r\n    background-color: grey;\r\n`*/\r\n\r\nexport default class App extends Component {\r\n    state={\r\n        data: [\r\n            {label: \"Going to learn React\", important: true, like: false, id: nextId()},\r\n            {label: \"That is good!\", important: false, like: false, id: nextId()},\r\n            {label: \"I need a break...\", important: false, like: false, id: nextId()}\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    }\r\n   \r\n    deleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n            const newArr = [...data.slice(0,index), ...data.slice(index+1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (body) => {\r\n        const newItem = {\r\n            label: body, \r\n            important:false,\r\n            id: nextId()\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index+1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleLiked = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n            const newArr = [...data.slice(0,index), newItem, ...data.slice(index+1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        console.log(`searchPost ${term}`);\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        })\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch = (term) => {\r\n        this.setState({term});\r\n    } \r\n\r\n    onFilterSelect = (filter) => {\r\n        this.setState({filter});\r\n    } \r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length; \r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);  \r\n        console.log(`Render ${term}`); \r\n        \r\n        return (\r\n            <AppBlock>\r\n                <AppHeader liked={liked}  allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                     onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter\r\n                     filter={filter}\r\n                     onFilterSelect={this.onFilterSelect} />\r\n                </div>\r\n                <PostList posts={visiblePosts}\r\n                 onDelete={this.deleteItem}\r\n                 onToggleImportant={this.onToggleImportant}\r\n                 onToggleLiked={this.onToggleLiked} />\r\n                <PostAddForm\r\n                 onAdd={this.addItem} />\r\n            </AppBlock>\r\n        )\r\n    }\r\n}\r\n","import App from './app';\r\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}